:where(.theme-neomorphism) {
	/*
		All buttons
	*/
	.button-cta,
	.button-outlined,
	.button-plain {
		--focus__shadow: 0 0 1px 1px var(--palette__accent-color);

		/* Layout */
		height: var(--button__height);

		/* Interaction */
		padding-block: 1px;

		/* Focus */
		&.button--pseudo-focus,
		&:focus-visible,
		&:has(:focus-visible) {
			--button__focus-shadow: var(--focus__shadow);
		}

		/* Pressed */
		&:is([aria-checked], [aria-current], [aria-selected]),
		&:active:not([aria-disabled], :has(:disabled)) {
			padding-block: 2px 0px;
		}

		/* Disabled */
		&:is([aria-disabled], :has(:disabled)) {
			--button-shadow: 0 .75px 1.5px rgb(0 0 0 / 20%);
		}
	}

	.button-cta {
		--button-shadow: 0 1px 2px rgb(0 0 0 / 20%);

		color: var(--palette__text--inverted);
		background-color: var(--palette__accent-background);
		background-image: linear-gradient(to bottom, rgb(255 255 255 / 10%), rgb(0 0 0 / 10%));
		box-shadow:
			var(--button-shadow),
			var(--button__focus-shadow, 0 0 #0000);
		
		/* Pressed */
		&:is([aria-checked], [aria-current], [aria-selected]),
		&:active:not([aria-disabled], :has(:disabled)) {
			background-image: linear-gradient(to bottom, rgb(255 255 255 / 4%), rgb(0 0 0 / 4%));
			box-shadow:
				inset 0 1px var(--button__inner-shadow-blur) rgb(0 0 0 / var(--button__inner-shadow-opacity)),
				var(--button__focus-shadow, 0 0 #0000);

			--button__inner-shadow-blur: 2px;
			--button__inner-shadow-opacity: 25%;

			:where(.scheme-dark) & {
				--button__inner-shadow-opacity: 60%;
			}
		}

		/* Hover */
		&.button--hover,
		&:hover:where(:not([aria-current], [aria-disabled], :has(:disabled))) {
			background-color: hsl(from var(--palette__accent-background) h s calc(l * .8));
		}
	}

	/*
		Outlined
	*/
	.button-outlined {
		--button-shadow: 0 .75px 2px rgb(0 0 0 / 20%);

		color: var(--palette__accent-color);
		background-color: var(--panel__background-color);
		background-image: linear-gradient(to bottom, rgb(255 255 255 / 8%), rgb(0 0 0 / 4%));
		box-shadow:
			var(--button-shadow),
			var(--button__focus-shadow, 0 0 #0000);

		/* Pressed */
		&:is([aria-checked], [aria-current], [aria-selected]),
		&:active:not([aria-disabled], :has(:disabled)) {
			color: var(--palette__accent-contrast);
			background-color: var(--palette__accent-color--bright);
			background-image: linear-gradient(to bottom, rgb(255 255 255 / 2%), rgb(0 0 0 / 2%));
			box-shadow:
				inset 0 1px var(--button__inner-shadow-blur) rgb(0 0 0 / var(--button__inner-shadow-opacity)),
				var(--button__focus-shadow, 0 0 #0000);
		}

		--button__inner-shadow-blur: 2px;
		--button__inner-shadow-opacity: 25%;

		:where(.scheme-dark) & {
			--button__inner-shadow-opacity: 50%;
		}

		/* Hover */
		&.button--hover,
		&:hover:where(:not([aria-current], [aria-disabled], :has(:disabled))) {
			color: var(--palette__accent-contrast);
		}
	}

	/*
		Plain
	*/
	.button-plain {
		color: var(--palette__accent-color);
		box-shadow: var(--button__focus-shadow, 0 0 #0000);

		.button-text:has(+ .button-icon) {
			color: var(--palette__text);
		}

		/* Hover */
		&.button--hover,
		&:hover:where(:not([aria-current], [aria-disabled], :has(:disabled))) {
			color: color-mix(in lab, var(--palette__accent-color), var(--palette__scheme) 20%);

			.button-text:has(+ .button-icon) {
				color: var(--palette__text--contrast);
			}
		}
	}

	/*
		Variants
	*/
	.button--small {
		height: var(--button__height--small);
	}
}
