.theme-neomorphism {
	--button__border-radius: var(--border-radius__small);
	--button__height: 3rem;
	--button__height--small: 2.5rem;

	&.device-touch {
		--button__height: 3.25rem;
		--button__height--small: 2.75rem;
	}

	.button-group {
		border-radius: var(--button__border-radius);

		&[role=radiogroup]:has([type=radio]:focus-visible) {
			box-shadow: var(--shadow__focus);
		}

		> :not(:first-child) {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}

		> :not(:last-child) {
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
		}
	}

	/*
		All buttons
	*/
	.button-cta,
	.button-outlined,
	.button-plain {
		/* Layout */
		height: var(--button__height);
		font-weight: 500;

		/* Interaction */
		padding-block: 1px;

		/* Focus */
		&.button--pseudo-focus,
		&:focus-visible,
		&:has(:focus-visible:not([type=radio])) {
			--button__shadow--focus: var(--shadow__focus);

			/* Ensure focus shadow is not hidden by siblings */
			z-index: var(--z__focused);
		}

		/* Pressed */
		&:is([aria-checked], [aria-current], [aria-selected], [aria-pressed]),
		&:active:not([aria-disabled], :has(:disabled)) {
			padding-block: 2px 0px;
		}
	}

	.button-cta {
		--button-cta__shadow: 0 1px 2px rgb(0 0 0 / 20%);
		--button-cta__background: var(--palette__accent-background);
		--button-cta__background--active: oklch(from var(--palette__accent) calc(l * .7) calc(c * .8) h);
		--button-cta__background--hover: oklch(from var(--palette__accent) calc(l * .9) calc(c * .9) h);

		color: var(--palette__text--inverted);
		background: var(--button-cta__background);
		background-image: linear-gradient(to bottom, rgb(255 255 255 / 10%), rgb(0 0 0 / 10%));
		box-shadow:
			var(--button-cta__shadow),
			var(--button__shadow--focus, 0 0 #0000);

		/* Pressed */
		&:is([aria-checked], [aria-current], [aria-selected], [aria-pressed]),
		&:active:not([aria-disabled], :has(:disabled)) {
			--button-cta__background: var(--button-cta__background--active);
			background-image: linear-gradient(to bottom, rgb(255 255 255 / 4%), rgb(0 0 0 / 4%));
			box-shadow:
				var(--shadow__inset),
				var(--button__shadow--focus, 0 0 #0000);
		}

		/* Hover */
		&.button--hover,
		:where(.supports-hover) &:hover:where(:not([aria-current], [aria-disabled], :has(:disabled))) {
			--button-cta__background: var(--button-cta__background--hover);
		}
	}

	/*
		Outlined
	*/
	.button-outlined {
		--button-outlined__background: var(--palette__background_light);
		--button-outlined__background--active: var(--palette__accent-background--inset);
		--button-outlined__background--hover: oklch(from var(--palette__background_light) calc(l * 1.2) c h);
		--button-outlined__color: var(--palette__accent-color);
		--button-outlined__color--active: var(--palette__accent-contrast);
		--button-outlined__color--hover: oklch(from var(--palette__accent-color) calc(l * 1.1) c h);
		--button-outlined__shadow: var(--shadow__highlight), var(--shadow__distinct);

		color: var(--button-outlined__color);
		background-color: var(--button-outlined__background);
		background-image: linear-gradient(to bottom, rgb(255 255 255 / 10%), rgb(0 0 0 / 4%));
		box-shadow:
			var(--button-outlined__shadow),
			var(--button__shadow--focus, 0 0 #0000);

		/* Pressed */
		&:is([aria-checked], [aria-current], [aria-selected], [aria-pressed]),
		&:active:not([aria-disabled], :has(:disabled)) {
			--button-outlined__background: var(--button-outlined__background--active);
			color: var(--button-outlined__color--active);
			background-image: linear-gradient(to bottom, rgb(255 255 255 / 2%), rgb(0 0 0 / 2%));
			box-shadow:
				var(--field__shadow),
				var(--button__shadow--focus, 0 0 #0000);
		}

		/* Hover */
		&.button--hover,
		:where(.supports-hover) &:hover:where(:not([aria-current], [aria-disabled], :has(:disabled))) {
			--button-outlined__background: var(--button-outlined__background--hover);
			color: var(--button-outlined__color--hover);
		}
	}

	/*
		Plain
	*/
	.button-plain {
		color: var(--palette__accent-color);
		box-shadow: var(--button__shadow--focus, 0 0 #0000);

		.button-text:has(+ .button-icon) {
			color: var(--palette__text);
		}

		/* Hover */
		&.button--hover,
		:where(.supports-hover) &:hover:where(:not([aria-current], [aria-disabled], :has(:disabled))) {
			color: var(--palette__accent-contrast);

			.button-text:has(+ .button-icon) {
				color: var(--palette__text--weak);
			}
		}
	}

	/*
		Variants
	*/
	.button--small {
		height: var(--button__height--small);
	}
}
