:root:where(.theme-lines) {
	--button__color: var(--palette__text);
	--button__border-radius: 5px;
	--button__border-color: var(--border__color);

	/* .button-group {
		> .button--round:not(:last-child) {
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;

			.button-border rect {
				display: unset;
			}

			&:first-child .button-border {
				circle {
					stroke-dasharray: 0 25 50 25;
				}

				rect {
					clip-path: inset(0 0 0 50%);
				}
			}
		}

		> .button--round:not(:first-child) {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;

			.button-border rect {
				display: unset;
			}

			&:last-child .button-border {
				circle {
					stroke-dasharray: 25 50 25;
				}

				rect {
					clip-path: inset(0 50% 0 0);
				}
			}
		}
	} */

	.button-cta,
	.button-outlined,
	.button-plain {
		/* Layout */
		height: 2.5rem;

		/*  Appearance */
		color: var(--button__color);

		/* Focus */
		&.button--pseudo-focus,
		&:focus-visible,
		&:has(:focus-visible) {
			outline-color: var(--palette__accent-color);
			outline-width: var(--link__outline-width--focus);
			outline-style: solid;
		}
	}

	/* Border */
	.button-outlined,
	.button-cta {
		position: relative;

		/* Hover */
		&.button--hover,
		:where(.supports-hover) &:hover:where(:not([aria-checked], [aria-current], [aria-disabled], :has(:disabled))) {
			color: color-mix(in lab, var(--button__color), var(--palette__accent-color) 25%);

			.button-border > * {
				stroke: var(--button__border-color);
			}
		}
	}

	.button-cta {
		background-color: color-mix(in lab, var(--palette__accent-color), var(--panel__background-color) 75%);

		/* Disabled */
		&:is([aria-disabled], :has(:disabled)) {
			background-color: transparent;
		}

		/* Hover */
		&.button--hover,
		:where(.supports-hover) &:hover:where(:not([aria-current], [aria-disabled], :has(:disabled))) {
			background-color: color-mix(in lab, var(--palette__accent-color), var(--panel__background-color) 60%);
		}
	}

	.button-outlined {
		color: var(--palette__accent-color);

		.button-border > * {
			stroke-dasharray: 0 100;
		}

		/* Hover */
		&.button--hover,
		:where(.supports-hover) &:hover:where(:not([aria-checked], [aria-current], [aria-disabled], :has(:disabled))) {
			.button-border > * {
				stroke-dasharray: 100 0;
			}
		}

		/* Pressed */
		&:is([aria-checked], [aria-current], [aria-selected]),
		&:active:not([aria-disabled], :has(:disabled)) {
			background-color: var(--palette__accent-background--inset);
			color: var(--button__color);
		}
	}

	.button-plain {
		color: var(--palette__accent-color);

		.button-text:has(+ .button-icon) {
			color: var(--palette__text);
		}

		/* Hover */
		&.button--hover,
		:where(.supports-hover) &:hover:where(:not([aria-current], [aria-disabled], :has(:disabled))) {
			color: color-mix(in lab, var(--palette__accent-color), var(--palette__scheme) 20%);

			.button-text:has(+ .button-icon) {
				color: var(--palette__text--weak);
			}
		}

		/* Pressed */
		&:is([aria-checked], [aria-current], [aria-selected]),
		&:active:not([aria-disabled], :has(:disabled)) {
			color: color-mix(in lab, var(--palette__accent-color), var(--panel__background-color) 15%);
		}
	}

	svg.button-border {
		pointer-events: none;
		position: absolute;

		width: 100%;
		height: 100%;

		> * {
			fill: transparent;
			stroke: var(--button__border-color);
			stroke-dasharray: 100 0;
			stroke-width: 3px;
			transition: stroke-dasharray ease-out var(--transition__duration--fast);
		}

		> circle {
			display: none;
			cx: 50%;
			cy: 50%;
			r: 50%;
		}

		> rect {
			rx: var(--button__border-radius);
			width: 100%;
			height: 100%;
		}

		/* Disabled */
		:where(.button-cta, .button-outlined):is([aria-disabled], :has(:disabled)) & {
			> * {
				stroke-dasharray: 0 100;
			}
		}
	}

	/*
		Variants
	*/
	.button--round {
		.button-border {
			circle {
				display: unset;
			}

			rect {
				display: none;
			}
		}
	}

	.button--small {
		height: 2rem;
	}
}
