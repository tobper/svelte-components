:root {
	--checkbox__size: 1.25rem;
	--field-button__padding-inline: .5rem;
	--field-icon__size: 1.5rem;
}

input {
	color: inherit;
	background: inherit;
	border: 0;

	/* Default min width for input is not 0 */
	width: 0;
	/* min-width: 0; */
}

[type='text'],
[type='email'],
[type='url'],
[type='password'],
[type='number'],
[type='date'],
[type='datetime-local'],
[type='month'],
[type='search'],
[type='tel'],
[type='time'],
[type='week'],
[multiple],
input:where(:not([type])),
select,
textarea {
	appearance: none;
	background: transparent;

	&:read-only {
		cursor: default;
	}

	&::placeholder {
		color: var(--palette__text--inactive);
		font-style: italic;
	}
}

/* Remove default Search Input "X" Cancel Button (Webkit) */
input[type=search]::-webkit-search-cancel-button {
	appearance: none;
}

.checkbox {
	--checkbox__background--checked: var(--palette__background);
	--checkbox__color--checked: var(--palette__accent-color);

	appearance: none;
	background-origin: border-box;
	background-repeat: no-repeat;
	border-radius: .25rem;
	width: var(--checkbox__size);
	height: var(--checkbox__size);
	transition: background calc(var(--field__transition-duration) / 1) ease-out;

	.field > & {
		margin-block: calc((var(--field-input__height) - var(--checkbox__size)) / 2 + var(--field-input__padding-block));
	}

	&:enabled {
		cursor: pointer;

		&:checked,
		&:indeterminate {
			animation: checkbox_mark var(--field__transition-duration) ease-out;
			background-color: var(--checkbox__background--checked);
		}
	}

	&:checked {
		background-image:
			linear-gradient(-45deg, transparent 65%, var(--checkbox__background--checked) 65.99%),
			linear-gradient(45deg, transparent 75%, var(--checkbox__background--checked) 75.99%),
			linear-gradient(-45deg, var(--checkbox__background--checked) 40%, transparent 40.99%),
			linear-gradient(45deg, var(--checkbox__background--checked) 30%, var(--checkbox__color--checked) 30.99%, var(--checkbox__color--checked) 40%, transparent 40.99%),
			linear-gradient(-45deg, var(--checkbox__color--checked) 50%, var(--checkbox__background--checked) 50.99%);
	}

	&:indeterminate {
		background-image:
			linear-gradient(90deg, transparent 80%, var(--checkbox__background--checked) 80%),
			linear-gradient(-90deg, transparent 80%, var(--checkbox__background--checked) 80%),
			linear-gradient(0deg, var(--checkbox__background--checked) 43%, var(--checkbox__color--checked) 43%, var(--checkbox__color--checked) 57%, var(--checkbox__background--checked) 57%);
	}

	/* Interaction */
	user-select: none;
}

@keyframes checkbox_mark {
	0% {
		background-position-y: 5px;
	}
	50% {
		background-position-y: -2px;
	}
	100% {
		background-position-y: 0;
	}
}

.field {
	/* Layout */
	max-width: 100%;

	/* Content */
	display: flex;
	flex-direction: column;

	/* Invalid state */
	&:has(input:is(:user-invalid, [aria-invalid])) {
		--palette__accent-color: var(--palette__error);
		--palette__accent-contrast: var(--palette__error-contrast);
	}
}

.field-label {
	/* Truncate text */
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;

	/* Invalid state */
	.field:has(input:is(:user-invalid, [aria-invalid])) & {
		color: var(--palette__accent-color);
	}
}

.field-label-optional {
	font-style: italic;
	font-weight: normal;
	opacity: 40%;
}

.field-content {
	--skeleton__border-radius: .25rem;

	/* Content */
	display: flex;
	margin-block: var(--field-content__margin-block);

	button {
		padding-inline: var(--field-button__padding-inline);
		height: auto;
	}

	.field-clear {
		margin: 0;
	
		svg {
			width: var(--field-icon__size);
		}
	}
	
	/* Interaction */
	label {
		cursor: text;
	}
}

.field-input {
	--field-input__padding-left: 0px;
	--field-input__padding-right: 0px;
	--field-input__padding-right-offset: 0px;

	/* Layout */
	flex: 1;

	/* Content */
	position: relative;
	display: flex;
	align-items: center;
 
	/* Disabled */
	input:disabled {
		-webkit-opacity: 100%;
		color: var(--field-input__color--readonly);
	}

	/* Readonly */
	.form--in_progress &,
	&:has(input[readonly]:not([aria-haspopup])) {
		/* SelectField will not have a popup when it is actually readonly */
		input,
		.field-loading,
		.field-icon {
			color: var(--field-input__color--readonly);
		}

		.field-clear {
			display: none;
		}
	}

	/* Clear button when field is out of focus/hover */
	.field-clear {
		opacity: 0;
		pointer-events: none;
	}

	&:focus-within .field-clear,
	.supports-hover &:hover .field-clear {
		opacity: 1;
		pointer-events: auto;
	}

	/* Hide icon when loading is visible */
	.field-icon:has(+ .field-loading:not(.hidden)) {
		display: none;
	}

	.field-loading.hidden {
		display: none;
	}


	/* Content */
	--field-value__padding-left--initial: 0px;
	--field-value__padding-left--icon: 0px;
	--field-value__padding-right--initial: 0px;
	--field-value__padding-right--icon: 0px;
	--field-value__padding-right--clear: 0px;

	&:first-child {
		--field-value__padding-left--initial: var(--field-input__padding-left);
	}

	&:last-child {
		--field-value__padding-right--initial: var(--field-input__padding-right);
	}

	&:has(.field-icon ~ .field-value) {
		--field-value__padding-left--icon: calc(var(--field-icon__size) + var(--space__small));
	}

	&:has(.field-value ~ .field-icon),
	&:has(.field-value ~ .field-loading:not(.hidden)) {
		--field-value__padding-right--icon: calc(var(--field-icon__size) + var(--space__small));
	}

	&:has(.field-clear) {
		--field-value__padding-right--clear: calc(var(--field-icon__size) + 2 * var(--field-button__padding-inline));
	}

	.field-icon:has(~ .field-value) {
		position: absolute;
		left: var(--field-value__padding-left--initial);
	}

	.field-value {
		padding-left: calc(
			var(--field-value__padding-left--initial) +
			var(--field-value__padding-left--icon)
		);
		padding-right: calc(
			var(--field-value__padding-right--clear) +
			var(--field-value__padding-right--icon) +
			var(--field-value__padding-right--initial)
		);
	}

	.field-clear {
		position: absolute;
		right: calc(
			var(--field-value__padding-right--icon) +
			var(--field-value__padding-right--initial)
		);
		height: 100%;
	}

	.field-value ~ .field-icon,
	.field-loading {
		position: absolute;
		right: var(--field-value__padding-right--initial);
	}
}

.field-value {
	&::selection {
		background-color: color-mix(in lab, var(--palette__accent-color), var(--palette__background) 70%);
	}

	/* Layout */
	flex: 1;
	box-sizing: content-box;
	min-height: var(--field-input__height);
	padding-block: var(--field-input__padding-block);

	/* Content */
	position: relative;
}

.field-loading,
.field-icon {
	/* Appearance */
	color: var(--palette__accent-color);

	/* Ensure span is same size as content */
	display: flex;

	svg {
		width: var(--field-icon__size);
		height: var(--field-icon__size);
	}

	/* Interaction */
	pointer-events: none;
}

.field-error {
	color: var(--palette__error);
	min-height: 1.5em; /* Same as line height */
	margin-top: .25rem;
}

/* Disabled */
.field:has(:disabled) .field-label,
label:has([type=checkbox]:disabled) {
	opacity: 50%;
}
